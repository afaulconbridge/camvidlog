// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/python
{
	"name": "Python 3",
	// Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
	"image": "mcr.microsoft.com/devcontainers/python:1-3.11-bookworm",
	"mounts": [
		//		"type=volume,source=nfsvolume,target=/workspace/camvidlog/data_nfs,volume-driver=local,volume-opt=type=nfs,volume-opt=device=:/shared-mirror,\"volume-opt=o=addr=192.168.1.102,rw,nfsvers=4,async,user=adam,pass=crystal\""
	],
	// ultralytics/ultralytics:8.0.221-python
	// Features to add to the dev container. More info: https://containers.dev/features.
	"features": {
		"ghcr.io/devcontainers/features/nvidia-cuda:1": {},
		"ghcr.io/iterative/features/nvtop:1": {},
		"ghcr.io/devcontainers-contrib/features/hatch:2": {},
		"ghcr.io/devcontainers-contrib/features/pre-commit:2": {}
	},
	"customizations": {
		"vscode": {
			"extensions": [
				"charliermarsh.ruff",
				"codezombiech.gitignore",
				"eamodio.gitlens",
				"exiasr.hadolint",
				"kevinrose.vsc-python-indent",
				"mosapride.zenkaku",
				"ms-azuretools.vscode-docker",
				"ms-python.python",
				"njpwerner.autodocstring",
				"oderwat.indent-rainbow",
				"pkief.material-icon-theme",
				"shardulm94.trailing-spaces",
				"usernamehw.errorlens",
				"yzhang.markdown-all-in-one",
				"tamasfe.even-better-toml"
			],
			"settings": {
				"python.defaultInterpreterPath": "/opt/rye/shims/python",
				"[python]": {
					"editor.defaultFormatter": "charliermarsh.ruff",
					"editor.codeActionsOnSave": {
						"source.fixAll.ruff": "explicit",
						"source.organizeImports.ruff": "explicit"
					},
					"editor.formatOnSave": true
				},
				"files.insertFinalNewline": true,
				"files.trimTrailingWhitespace": true,
				"terminal.integrated.defaultProfile.linux": "zsh",
				"terminal.integrated.profiles.linux": {
					"zsh": {
						"path": "/bin/zsh"
					}
				}
			}
		}
	},
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],
	// Require GPU access on the host
	// not enforced,
	"hostRequirements": {
		"gpu": true
	},
	// An array of Docker CLI arguments that should be used when running the container.
	"runArgs": [
		"--gpus=all",
		"--shm-size=1073741824"
	],
	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "pip3 install --user -r requirements.txt",
	"postCreateCommand": "sudo apt-get update && sudo apt-get --assume-yes install python3-opencv ffmpeg"
	// Configure tool-specific properties.
	// "customizations": {},
	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	// "remoteUser": "root"
}
